#!/bin/sh

##
## Load Global Defaults
##
. ../../GSB.options
PKG_DEST=${PKG_DEST:-/home/packages}
TMP=${TMP:-/tmp}

##
## Build Directory Structure
##
if [ ! -d $TMP ]; then
  mkdir -p $TMP;
fi
if [ ! -d $PKG_DEST ]; then
  mkdir -p $PKG_DEST;
fi

##
## Official Build Order for Gnome 2.20.x
##
## http://www.gnome.org/start/2.20/notes/en/rninstallation.html

####
#### BUILD ORDER
####


BUILD_ORDER="
eog
sound-juicer
file-roller
mozilla
epiphany
epiphany-extensions
totem
mozilla
yelp
enchant
gnome-media
libcroco
libgsf
gnome-utils
gnome-system-monitor
gnome-netstatus
zenity
libgail-gnome
gnome-speech
gnome-mag
gnopernicus
gok
gob2
gnome-games
gnome-user-docs
file-roller
gnome-system-tools
gnome-nettool
vino
gnome-volume-manager
gnome-backgrounds
gtkhtml
evolution
evolution-webcal
evolution-exchange
ekiga
evince
dasher
gnome-screensaver
pessulus
sabayon
gtksourceview
gedit-plugins
gnome-spell
gnome-pilot
gnome-pilot-conduits
nautilus-sendto
gnome-mount
liboobs
gal2
gnome-user-share
gdm
alacarte
"

## 
## TEST MODE
##
## I use the -test switch to prevent package installation,
## rather, only to run a test configure/build/package.
## Not to be used for proper package preparations.

usage() {
cat << EOF
Usage: `basename $0` [options]

Use this script to run a rolling compile of all the packages listed in BUILD_ORDER.

options:      -test (run a test of configure/compile/link/package, without
                     installing anything.)
              -help (this tiny help screen)

Current build order: `for i in $BUILD_ORDER; do echo -n $i" "; done;`

EOF
}
TESTMODE=no
while [ 0 ]; do
  if [ "$1" = "-test" ]; then
    TESTMODE=yes
    shift 1
  elif [ "$1" = "-help" ]; then
    usage;
    exit;
  else
    break
  fi
done


##
## Main Build Loop
##

(

for i in $BUILD_ORDER
do
(
  cd $i
  echo ""
  echo ""
  echo "*************************************************"
  echo "            Building $i"
  echo "*************************************************"
  echo ""
  ./$i.SlackBuild --cleanup || exit 1
  if [ "$TESTMODE" == "no" ]; then
	upgradepkg --install-new $PKG_DEST/$i*.tgz
  fi;
)
done


##
## Fork to Log
##

) 2>&1 | tee $TMP/gnome.platform.build.log
