#!/bin/bash
# Copyright (c) 2007, 2008, 2009, 2010, 2011 Steve Kennedy <steve (at) gnomeslackbuild.org>
# All rights reserved.
#
# Licenced under the terms of the GNU General Public Licence version 3.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# List any packages here that are required to build this package.
# The list is space seperated and case sensitive.
REQUIRED_PACKAGES="gobject-introspection"
GIRVERSION="0.10.3"

# Build variables.
TAG=${TAG:-gsb}
ARCH=${ARCH:-i486}
DISTRO=${DISTRO:-slackware}
TMP=${TMP:-/tmp}
PKGDEST=${PKGDEST:-$TMP}

# Script variables.
PKGNAME=$(basename $0 .SlackBuild)
PKG=$TMP/package-$PKGNAME
CWD=$(pwd)

# Source dir
SRCDIR=$(cd $(dirname $0); pwd)
# Packages to generate GIRs from
VERSION[0]="2.22.1"
SRCNAME[0]="gdk-pixbuf"
SOURCE[0]="$SRCDIR/gdk-pixbuf-${VERSION[0]}.tar.bz2"
SRCURL[0]="ftp://ftp.gnome.org/pub/gnome/sources/gdk-pixbuf/2.22/gdk-pixbuf-${VERSION[0]}.tar.bz2"
MD5SUM[0]="716c4593ead3f9c8cca63b8b1907a561"
VERSION[1]="1.28.3"
SRCNAME[1]="pango"
SOURCE[1]="$SRCDIR/pango-${VERSION[1]}.tar.bz2"
SRCURL[1]="ftp://ftp.gnome.org/pub/gnome/sources/pango/1.28/pango-${VERSION[1]}.tar.bz2"
MD5SUM[1]="caa74baea47e7e16bc73c89f9089d522"
VERSION[2]="1.32.0"
SRCNAME[2]="atk"
SOURCE[2]="$SRCDIR/atk-${VERSION[2]}.tar.bz2"
SRCURL[2]="ftp://ftp.gnome.org/pub/gnome/sources/atk/1.32/atk-${VERSION[2]}.tar.bz2"
MD5SUM[2]="b9a19a3e426cd9ca930f0108c4ee343f"

# Temporary space and package storage.
mkdir -p $TMP
rm -rf $PKG
mkdir -p $PKG
mkdir -p $PKGDEST
mkdir -p $TMP/${SRCNAME[$i]}

for (( i = 0; i < ${#SOURCE[*]}; i++ )) ; do

  # Download sources
  if ! [ -f ${SOURCE[$i]} ]; then
      wget -c -4 -T 20 -O "${SOURCE[$i]}" "${SRCURL[$i]}" || exit 1
  fi;
  echo "${MD5SUM[$i]}  ${SOURCE[$i]}" > $TMP/md5sum.${i}.$$
  DOWNLOAD_ATTEMPT=0; 
  VALID_MD5=0
  until [ $DOWNLOAD_ATTEMPT -eq 3 -o $VALID_MD5 -eq 1 ]; do
    # MD5SUM Comparison
    if [ -f ${SOURCE[$i]} ]; then
       md5sum -c $TMP/md5sum.${i}.$$ 2>/dev/null 1>/dev/null && VALID_MD5=1;
    fi;
    if [ "${VALID_MD5}" = "0" ]; then
       # Download the source file
      wget -c -4 -T 20 -O "${SOURCE[$i]}" "${SRCURL[$i]}" || {
         echo ; echo "* Error: Failed to complete download."
	 exit 1
       }
    fi
    DOWNLOAD_ATTEMPT=$[$DOWNLOAD_ATTEMPT+1];
    done;
    rm -fr $TMP/md5sum.${i}.$$

    if [ ! -f "${SOURCE[$i]}" -o ! -s "${SOURCE[$i]}" -o $VALID_MD5 -eq 0 ]; then
      echo "File '$(basename ${SOURCE[$i]})' not available. Aborting the build."
      exit 1
    fi

  echo "Building ${SRCNAME[$i]}."
  # Decompress archive.
  cd $TMP &&
  rm -rf ${SRCNAME[$i]}-${VERSION[$i]} &&
  tar xjf ${SOURCE[$i]} &&
  cd ${SRCNAME[$i]}-${VERSION[$i]} || exit 1

  # Fix permissions for building.
  chown -R root:root .
  find . \
    \( -perm 777 -o -perm 775 -o -perm 711 -o -perm 555 -o -perm 511 \) \
    -exec chmod 755 {} \; -o \
    \( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) \
    -exec chmod 644 {} \;

  # Apply ARCH specific patches.
  if [ "$ARCH" = "i486" -o "$ARCH" = "i586" -o "$ARCH" = "i686" ]; then
    echo "${0##*/}: Applying any patches for $ARCH"
  elif [ "$ARCH" = "x86_64" ]; then
    echo "${0##*/}: Applying any patches for $ARCH"
  elif [ "$ARCH" = "powerpc" ]; then
    echo "${0##*/}: Applying any patches for $ARCH"
    fi

  # Configure, Tuning, GCC and Make options.
  CONFIGURE_FLAGS=${GSB_CONFIGURE_FLAGS:-""}
  if [ "$ARCH" = "i486" -o "$ARCH" = "i586" ]; then
    TUNE_CFLAGS=${GSB_TUNE_CFLAGS:-"-O2 -march=$ARCH -mtune=$TUNE"}
    LIBDIRSUFFIX=""
  elif [ "$ARCH" = "i686" ]; then
    TUNE_CFLAGS="-O2 -march=i686 -mtune=i686"
    LIBDIRSUFFIX=""
  elif [ "$ARCH" = "s390" ]; then
    TUNE_CFLAGS="-O2"
    LIBDIRSUFFIX=""
  elif [ "$ARCH" = "x86_64" ]; then
      TUNE_CFLAGS=${GSB_TUNE_CFLAGS:-"-O2 -fPIC"}
      LIBDIRSUFFIX="64"
  elif [ "$ARCH" = "powerpc" ]; then
    TUNE_CFLAGS=${GSB_TUNE_CFLAGS:-"-O2 -march=$ARCH"}
  fi
  EXTRA_CFLAGS=${GSB_EXTRA_CFLAGS:-""}
  MAKE_FLAGS=${GSB_MAKE_FLAGS:-""}

  # Configure
  CFLAGS="$TUNE_CFLAGS $EXTRA_CFLAGS" CXXFLAGS="$TUNE_CFLAGS $EXTRA_CFLAGS" \
    ./configure --prefix=/usr --sysconfdir=/etc --localstatedir=/var/lib \
    --mandir=/usr/man \
    --libdir=/usr/lib${LIBDIRSUFFIX} \
    --disable-static \
    --enable-introspection=yes \
    || exit 1

  # Build and install.
  make $MAKE_FLAGS &&
  make $MAKE_FLAGS DESTDIR=$TMP/${SRCNAME[$i]} install || exit 1
  echo "Installed."

  cd $TMP/${SRCNAME[$i]} || exit 1
  echo "Creating tarball."
  tar cf - --remove-files \
  $(find . -depth -type f -name "*.gir" \
      -o -type f -name "*typelib" ) \
    | ( cd ${PKG} ; tar xf - ) || exit 1

  rm -fr $TMP/${SRCNAME[$i]}

done;

cd $PKG ; tar cfv - . | xz -c > $CWD/gir-repository-${GIRVERSION}-${ARCH}.txz || exit 1

# Cleanup
rm -rf $PKG; if [ "$NOCLEANUP" = "0" ]; then
  rm -rf $PKG
fi;
