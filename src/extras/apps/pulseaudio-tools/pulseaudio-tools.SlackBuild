#!/bin/sh

CWD=`pwd`
TMP=${TMP:-/tmp}
PKG=$TMP/package-pulseaudio-tools

PA_DEV_CHOOSER=0.9.3
PA_MAN=0.9.3
PA_VU_CONTROL=0.9.4
PA_VU_METER=0.9.2
PA_PREFS=0.9.5

PVERSION=0.9.4
ARCH=${ARCH:-i486}
BUILD=2

if [ -f /var/log/packages/pulseaudio-tools-$PVERSION-$ARCH-$BUILD ]; then
  echo "pulseaudio-tools-$PVERSION-$ARCH-$BUILD package already installed"
  exit 0
fi

if [ ! -d $TMP ]; then
  mkdir -p $TMP # location to build the source
fi
rm -rf $PKG
mkdir -p $PKG

if [ "$ARCH" = "i386" ]; then
  SLKCFLAGS="-O2 -march=i386 -mtune=i686"
  ARCH_CONFIGURE=""
elif [ "$ARCH" = "i486" ]; then
  SLKCFLAGS="-O2 -march=i486 -mtune=i686"
  ARCH_CONFIGURE=""
elif [ "$ARCH" = "s390" ]; then
  SLKCFLAGS="-O2"
  ARCH_CONFIGURE=""
elif [ "$ARCH" = "powerpc" ]; then
  SLKCFLAGS="-O2"
  ARCH_CONFIGURE=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  ARCH_CONFIGURE="--libdir=/usr/lib64"
fi


# PulseAudio Volume Control
cd $TMP
tar -xzvf $CWD/pavucontrol-$PA_VU_CONTROL.tar.gz
cd pavucontrol-$PA_VU_CONTROL

# Apply $ARCH specific patches
if [ "$ARCH" = "i386" ]; then
  echo "Applying patches for $ARCH"
  #cat $CWD/foo.patch | patch -p0 --verbose
elif [ "$ARCH" = "i486" ]; then
  echo "Applying patches for $ARCH"
  #cat $CWD/foo.patch | patch -p0 --verbose
elif [ "$ARCH" = "s390" ]; then
  echo "Applying patches for $ARCH"
  #cat $CWD/foo.patch | patch -p0 --verbose
elif [ "$ARCH" = "powerpc" ]; then
  echo "Applying patches for $ARCH"
  #cat $CWD/foo.patch | patch -p0 --verbose
elif [ "$ARCH" = "x86_64" ]; then
  echo "Applying patches for $ARCH"
  #cat $CWD/foo.patch | patch -p0 --verbose
fi

CFLAGS="$SLKCFLAGS" \
./configure --prefix=/usr \
            --sysconfdir=/etc \
            --localstatedir=/var/lib \
            --disable-static \
            $ARCH_CONFIGURE \
            $ARCH-slackware-linux || exit 1
make || exit 1
make install DESTDIR=$PKG

chown -R root.bin $PKG/usr/bin

mkdir -p $PKG/usr/doc/pavucontrol-$PA_VU_CONTROL
cp -a AUTHORS COPYING ChangeLog INSTALL NEWS README \
        TODO \
        $PKG/usr/doc/pavucontrol-$PA_VU_CONTROL
find $PKG/usr/doc/pavucontrol-$PA_VU_CONTROL/ -type f -exec chmod 644 {} \;
chown root.root $PKG/usr/doc/pavucontrol-$PA_VU_CONTROL/*


# PulseAudio Volume Meter
cd $TMP
tar -xzvf $CWD/pavumeter-$PA_VU_METER.tar.gz
cd pavumeter-$PA_VU_METER

# Apply $ARCH specific patches
if [ "$ARCH" = "i386" ]; then
  echo "Applying patches for $ARCH"
  #cat $CWD/foo.patch | patch -p0 --verbose
elif [ "$ARCH" = "i486" ]; then
  echo "Applying patches for $ARCH"
  #cat $CWD/foo.patch | patch -p0 --verbose
elif [ "$ARCH" = "s390" ]; then
  echo "Applying patches for $ARCH"
  #cat $CWD/foo.patch | patch -p0 --verbose
elif [ "$ARCH" = "powerpc" ]; then
  echo "Applying patches for $ARCH"
  #cat $CWD/foo.patch | patch -p0 --verbose
elif [ "$ARCH" = "x86_64" ]; then
  echo "Applying patches for $ARCH"
  #cat $CWD/foo.patch | patch -p0 --verbose
fi

CFLAGS="$SLKCFLAGS" \
./configure --prefix=/usr \
            --sysconfdir=/etc \
            --localstatedir=/var/lib \
            --disable-static \
            $ARCH_CONFIGURE \
            $ARCH-slackware-linux || exit 1
make || exit 1
make install DESTDIR=$PKG

chown -R root.bin $PKG/usr/bin

mkdir -p $PKG/usr/doc/pavumeter-$PA_VU_METER
cp -a AUTHORS COPYING ChangeLog INSTALL NEWS README \
        TODO \
        $PKG/usr/doc/pavumeter-$PA_VU_METER
find $PKG/usr/doc/pavumeter-$PA_VU_METER/ -type f -exec chmod 644 {} \;
chown root.root $PKG/usr/doc/pavumeter-$PA_VU_METER/*


# PulseAudio Manager  
cd $TMP
tar -xzvf $CWD/paman-$PA_MAN.tar.gz
cd paman-$PA_MAN

# Apply $ARCH specific patches
if [ "$ARCH" = "i386" ]; then
  echo "Applying patches for $ARCH"
  #cat $CWD/foo.patch | patch -p0 --verbose
elif [ "$ARCH" = "i486" ]; then
  echo "Applying patches for $ARCH"
  #cat $CWD/foo.patch | patch -p0 --verbose
elif [ "$ARCH" = "s390" ]; then
  echo "Applying patches for $ARCH"
  #cat $CWD/foo.patch | patch -p0 --verbose
elif [ "$ARCH" = "powerpc" ]; then
  echo "Applying patches for $ARCH"
  #cat $CWD/foo.patch | patch -p0 --verbose
elif [ "$ARCH" = "x86_64" ]; then
  echo "Applying patches for $ARCH"
  #cat $CWD/foo.patch | patch -p0 --verbose
fi

CFLAGS="$SLKCFLAGS" \
./configure --prefix=/usr \
            --sysconfdir=/etc \
            --localstatedir=/var/lib \
            --disable-static \
            $ARCH_CONFIGURE \
            $ARCH-slackware-linux || exit 1
make || exit 1
make install DESTDIR=$PKG

chown -R root.bin $PKG/usr/bin

mkdir -p $PKG/usr/doc/paman-$PA_MAN
cp -a AUTHORS COPYING ChangeLog INSTALL NEWS README \
        TODO \
        $PKG/usr/doc/paman-$PA_MAN
find $PKG/usr/doc/paman-$PA_MAN/ -type f -exec chmod 644 {} \;
chown root.root $PKG/usr/doc/paman-$PA_MAN/*


# PulseAudio Device Chooser
cd $TMP
tar -xzvf $CWD/padevchooser-$PA_DEV_CHOOSER.tar.gz
cd padevchooser-$PA_DEV_CHOOSER

# Apply $ARCH specific patches
if [ "$ARCH" = "i386" ]; then
  echo "Applying patches for $ARCH"
  #cat $CWD/foo.patch | patch -p0 --verbose
elif [ "$ARCH" = "i486" ]; then
  echo "Applying patches for $ARCH"
  #cat $CWD/foo.patch | patch -p0 --verbose
elif [ "$ARCH" = "s390" ]; then
  echo "Applying patches for $ARCH"
  #cat $CWD/foo.patch | patch -p0 --verbose
elif [ "$ARCH" = "powerpc" ]; then
  echo "Applying patches for $ARCH"
  #cat $CWD/foo.patch | patch -p0 --verbose
elif [ "$ARCH" = "x86_64" ]; then
  echo "Applying patches for $ARCH"
  #cat $CWD/foo.patch | patch -p0 --verbose
fi

CFLAGS="$SLKCFLAGS" \
./configure --prefix=/usr \
            --sysconfdir=/etc \
            --localstatedir=/var/lib \
            --disable-static \
            $ARCH_CONFIGURE \
            $ARCH-slackware-linux || exit 1
make || exit 1
make install DESTDIR=$PKG

chown -R root.bin $PKG/usr/bin

mkdir -p $PKG/usr/doc/padevchooser-$PA_DEV_CHOOSER
cp -a AUTHORS COPYING ChangeLog INSTALL NEWS README \
        TODO \
        $PKG/usr/doc/padevchooser-$PA_DEV_CHOOSER
find $PKG/usr/doc/padevchooser-$PA_DEV_CHOOSER/ -type f -exec chmod 644 {} \;
chown root.root $PKG/usr/doc/padevchooser-$PA_DEV_CHOOSER/*


# PulseAudio Manager  
cd $TMP
tar -xzvf $CWD/paprefs-$PA_PREFS.tar.gz
cd paprefs-$PA_PREFS

# Apply $ARCH specific patches
if [ "$ARCH" = "i386" ]; then
  echo "Applying patches for $ARCH"
  #cat $CWD/foo.patch | patch -p0 --verbose
elif [ "$ARCH" = "i486" ]; then
  echo "Applying patches for $ARCH"
  #cat $CWD/foo.patch | patch -p0 --verbose
elif [ "$ARCH" = "s390" ]; then
  echo "Applying patches for $ARCH"
  #cat $CWD/foo.patch | patch -p0 --verbose
elif [ "$ARCH" = "powerpc" ]; then
  echo "Applying patches for $ARCH"
  #cat $CWD/foo.patch | patch -p0 --verbose
elif [ "$ARCH" = "x86_64" ]; then
  echo "Applying patches for $ARCH"
  #cat $CWD/foo.patch | patch -p0 --verbose
fi

CFLAGS="$SLKCFLAGS" \
./configure --prefix=/usr \
            --sysconfdir=/etc \
            --localstatedir=/var/lib \
            --disable-static \
            $ARCH_CONFIGURE \
            $ARCH-slackware-linux || exit 1
make || exit 1
make install DESTDIR=$PKG

chown -R root.bin $PKG/usr/bin

mkdir -p $PKG/usr/doc/paman-$PA_PREFS
cp -a AUTHORS COPYING ChangeLog INSTALL NEWS README \
        TODO \
        $PKG/usr/doc/paman-$PA_PREFS
find $PKG/usr/doc/paman-$PA_PREFS/ -type f -exec chmod 644 {} \;
chown root.root $PKG/usr/doc/paman-$PA_PREFS/*

# strip:
( cd $PKG
  find . | xargs file | grep "executable" | grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null
  find . | xargs file | grep "shared object" | grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null
)

gzip -9 $PKG/usr/man/*/*
gzip -9 $PKG/usr/info/*

mkdir -p $PKG/install
cat $CWD/slack-conflicts > $PKG/install/slack-conflicts
cat $CWD/slack-required > $PKG/install/slack-required
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/doinst.sh > $PKG/install/doinst.sh

cd $PKG
makepkg -l y -c n $TMP/pulseaudio-tools-$PVERSION-$ARCH-$BUILD.tgz

# Clean up the extra stuff:
if [ "$1" = "--cleanup" ]; then
  rm -rf $TMP/padevchooser-$PA_DEV_CHOOSER
  rm -rf $TMP/paman-$PA_MAN
  rm -rf $TMP/pavumeter-$
  rm -rf $TMP/pavucontrol-$PA_VU_CONTROL
  rm -rf $PKG
fi
