#!/bin/sh

# Copyright (c) 2007-2011 Steve Kennedy <steve (at) gnomeslackbuild.org>
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

VERSION=0.6.29
BUILD=2
TAG=${TAG:-gsb}

NUMJOBS=${NUMJOBS:-" -j10 "}

# Automatically determine the architecture we're building on:
if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) export ARCH=i486 ;;
    arm*) export ARCH=arm ;;
    # Unless $ARCH is already set, use uname -m for all other archs:
       *) export ARCH=$( uname -m ) ;;
  esac
fi

DISTRO=${DISTRO:-slackware}
TMP=${TMP:-/tmp}
PKGDEST=${PKGDEST:-$TMP}
PKGNAM=avahi
PKG=$TMP/package-$PKGNAM
CWD=$(pwd)

if [ "$ARCH" = "i486" ]; then
  GSBCFLAGS=${GSBCFLAGS:-"-O2 -march=i486 -mtune=i686"}
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "s390" ]; then
  GSBCFLAGS="-O2"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  GSBCFLAGS=${GSB_GSBCFLAGS:-"-O2 -fPIC"}
  LIBDIRSUFFIX="64"
else
  GSBCFLAGS=${GSBCFLAGS:-"-O2"}
  LIBDIRSUFFIX=""
fi

rm -rf $PKG
mkdir -p $TMP $PKGDEST
cd $TMP &&
rm -rf $PKGNAM-$VERSION &&
tar xvf $CWD/$PKGNAM-$VERSION.tar.?z* &&
cd $PKGNAM-$VERSION || exit 1

# Disable browser icons for ssh and vnc
zcat $CWD/avahi.browser.icons.diff.gz | patch -p1 || exit 1

chown -R root:root .
find . \
  \( -perm 777 -o -perm 775 -o -perm 711 -o -perm 555 -o -perm 511 \) \
  -exec chmod 755 {} \; -o \
  \( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) \
  -exec chmod 644 {} \;

# We need to make sure we have avahi added to /etc/passwd and /etc/group before configure
if ! grep -q "^avahi:" /etc/passwd; then
  /usr/sbin/useradd -u 85 -s /bin/false -d /dev/null avahi 2>&1 >/dev/null || exit 1
  /usr/sbin/useradd -u 88 -s /bin/false -d /dev/null avahi-autoipd 2>&1 >/dev/null || exit 1
fi 
if ! grep -q "^avahi:" /etc/group; then
  /usr/sbin/groupadd -g 85 avahi 2>&1 /dev/null || exit 1
fi 

CFLAGS="$GSBCFLAGS" \
./configure --prefix=/usr \
  --sysconfdir=/etc \
  --docdir=/usr/doc/$PKGNAM-$VERSION \
  --localstatedir=/var \
  --mandir=/usr/man \
  --libdir=/usr/lib${LIBDIRSUFFIX} \
  --build=$ARCH-$DISTRO-linux \
  --enable-python \
  --enable-python-dbus \
  --enable-pygtk\
  --enable-glib \
  --enable-dbus \
  --disable-gtk \
  --enable-gtk3 \
  --disable-qt3 \
  --disable-qt4 \
  --enable-tests \
  --disable-mono \
  --disable-monodoc \
  --enable-core-docs \
  --with-avahi-user=avahi \
  --with-avahi-group=avahi \
  --with-autoipd-user=avahi-autoipd \
  --with-autoipd-group=avahi-autoipd \
  --with-distro=slackware \
  --enable-introspection=yes \
  --program-prefix= \
  --program-suffix= \
  --disable-static \
  || exit 1

make ${NUMJOBS} || make || exit 1
make DESTDIR=$PKG install || exit 1

# Setup up autoipd dirs
mkdir -p ${PKG}/var/run/avahi-daemon
mkdir -p ${PKG}/var/run/avahi-autoipd 

# Preserve previously installed configuations.
( cd $PKG/etc/rc.d ; for i in avahidaemon avahidnsconfd; do
    mv rc.$i rc.$i.new
done )
mv $PKG/etc/dbus-1/system.d/avahi-dbus.conf $PKG/etc/dbus-1/system.d/avahi-dbus.conf.new || exit 1
mv $PKG/etc/avahi/avahi-daemon.conf $PKG/etc/avahi/avahi-daemon.conf.new || exit 1

find $PKG | xargs file | egrep "executable|shared object" | grep "ELF" | \
  cut -d: -f1 | xargs strip --strip-unneeded 2>/dev/null

# Compress and link manpages
if [ -d $PKG/usr/man ]; then
  ( cd $PKG/usr/man
    for manpagedir in $(find . -type d -name "man*") ; do
      ( cd $manpagedir
        for eachpage in $( find . -type l -maxdepth 1) ; do
          ln -s $( readlink $eachpage ).gz $eachpage.gz
          rm $eachpage
        done
        gzip -9 *.?
      )
    done
  )
fi

mkdir -p $PKG/usr/doc/$PKGNAM-$VERSION
cp -a LICENSE docs/README docs/AUTHORS docs/NEWS docs/*.dia \
  $PKG/usr/doc/$PKGNAM-$VERSION
find $PKG/usr/doc/$PKGNAM-$VERSION/ -type f -exec chmod 644 {} \;
chown -R root:root $PKG/usr/doc/$PKGNAM-$VERSION

mkdir -p $PKG/install 
zcat $CWD/doinst.sh.gz > $PKG/install/doinst.sh
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/slack-required > $PKG/install/slack-required

cd $PKG
makepkg -p -l y -c n $PKGDEST/${PKGNAM}-${VERSION}-$ARCH-${BUILD}${TAG}.txz
