#!/bin/sh

CWD=`pwd`
TMP=${TMP:-/tmp}
PKG=$TMP/package-evolution

VERSION=2.5.2
ARCH=${ARCH:-i486}
BUILD=1

if [ -f /var/log/packages/evolution-$VERSION-$ARCH-$BUILD ]; then
  echo "evolution-$VERSION-$ARCH-$BUILD package already installed"
  exit 0
fi

if [ ! -d $TMP ]; then
  mkdir -p $TMP # location to build the source
fi
rm -rf $PKG
mkdir -p $PKG
mkdir -p $PKG/var/lib/scrollkeeper

if [ "$ARCH" = "i386" ]; then
  SLKCFLAGS="-O2 -march=i386 -mcpu=i686"
  ARCH_CONFIGURE=""
elif [ "$ARCH" = "i486" ]; then
  SLKCFLAGS="-O2 -march=i486 -mcpu=i686"
  ARCH_CONFIGURE=""
elif [ "$ARCH" = "powerpc" ]; then
  SLKCFLAGS="-O2"
  ARCH_CONFIGURE=""
elif [ "$ARCH" = "s390" ]; then
  SLKCFLAGS="-O2"
  ARCH_CONFIGURE=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  ARCH_CONFIGURE="--libdir=/usr/lib64"
fi

cd $TMP
tar xjvf $CWD/evolution-$VERSION.tar.bz2
cd evolution-$VERSION

# Apply $ARCH specific patches
if [ "$ARCH" = "i386" ]; then
  echo "Applying patches for $ARCH"
  #cat $CWD/foo.patch | patch -p0 --verbose
elif [ "$ARCH" = "i486" ]; then
  echo "Applying patches for $ARCH"
  #cat $CWD/foo.patch | patch -p0 --verbose
elif [ "$ARCH" = "s390" ]; then
  echo "Applying patches for $ARCH"
  #cat $CWD/foo.patch | patch -p0 --verbose
elif [ "$ARCH" = "powerpc" ]; then
  echo "Applying patches for $ARCH"
  #cat $CWD/foo.patch | patch -p0 --verbose
elif [ "$ARCH" = "x86_64" ]; then
  echo "Applying patches for $ARCH"
  #cat $CWD/foo.patch | patch -p0 --verbose
  zcat $CWD/ldap_configure.patch.gz | patch -p1 --verbose
fi

chown -R root.root .
find . -perm 666 -exec chmod 644 {} \;
find . -perm 664 -exec chmod 644 {} \;
CFLAGS="$SLKCFLAGS" \
./configure --prefix=/usr \
	    --disable-static \
            --sysconfdir=/etc \
            --localstatedir=/var/lib \
	    --enable-nss=yes \
	    --enable-nntp=yes \
	    --enable-pilot-conduits=yes \
	    --disable-gtk-doc \
	    --with-openldap=yes \
            --enable-openssl=yes \
            $ARCH_CONFIGURE \
	    $ARCH-slackware-linux || exit 1
make || exit 1
make install DESTDIR=$PKG

SCHEMAS=$PKG/etc/gconf/schemas
for i in $SCHEMAS/*.schemas 
do
GCONF_CONFIG_SOURCE="xml::$PKG/etc/gconf/gconf.xml.defaults" \
	gconftool-2 --makefile-install-rule $i
done

(
  cd $PKG/etc/gconf/gconf.xml.defaults
  find ./ -type d -exec chmod go+rx {} \;
  find ./ -type f -exec chmod go+r {} \;
)

chown -R root.bin $PKG/usr/bin

mkdir -p $PKG/usr/doc/evolution-$VERSION
cp -a AUTHORS COPYING ChangeLog HACKING INSTALL NEWS README TODO \
  MAINTAINERS NEWS-1.0 $PKG/usr/doc/evolution-$VERSION
chmod 644 $PKG/usr/doc/evolution-$VERSION/*
chown root.root $PKG/usr/doc/evolution-$VERSION/*

find $PKG -type f | xargs file | grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded
gzip -9 $PKG/usr/man/*/*

mkdir -p $PKG/install
cat $CWD/doinst.sh > $PKG/install/doinst.sh
cat $CWD/slack-required > $PKG/install/slack-required
cat $CWD/slack-desc > $PKG/install/slack-desc

cd $PKG
makepkg -l y -c n $TMP/evolution-$VERSION-$ARCH-$BUILD.tgz

# Clean up the extra stuff:
if [ "$1" = "--cleanup" ]; then
  rm -rf $TMP/evolution-$VERSION
  rm -rf $PKG
fi
