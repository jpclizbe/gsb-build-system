#!/bin/sh

CWD=`pwd`
TMP=${TMP:-/tmp}
PKG=$TMP/package-gnome-pilot

VERSION=2.0.13
ARCH=${ARCH:-i486}
BUILD=2

if [ -f /var/log/packages/gnome-pilot-$VERSION-$ARCH-$BUILD ]; then
  echo "gnome-pilot-$VERSION-$ARCH-$BUILD package already installed"
  exit 0
fi

if [ ! -d $TMP ]; then
  mkdir -p $TMP # location to build the source
fi
rm -rf $PKG
mkdir -p $PKG

if [ "$ARCH" = "i386" ]; then
  SLKCFLAGS="-O2 -march=i386 -mcpu=i686"
  ARCH_CONFIGURE=""
elif [ "$ARCH" = "i486" ]; then
  SLKCFLAGS="-O2 -march=i486 -mcpu=i686"
  ARCH_CONFIGURE=""
elif [ "$ARCH" = "powerpc" ]; then
  SLKCFLAGS="-O2"
  ARCH_CONFIGURE=""
elif [ "$ARCH" = "s390" ]; then
  SLKCFLAGS="-O2"
  ARCH_CONFIGURE=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  ARCH_CONFIGURE="--libdir=/usr/lib64"
fi

cd $TMP 
tar xjvf $CWD/gnome-pilot-$VERSION.tar.bz2
cd gnome-pilot-$VERSION

# Apply $ARCH specific patches
if [ "$ARCH" = "i386" ]; then
  echo "Applying patches for $ARCH"
  #cat $CWD/foo.patch | patch -p0 --verbose
elif [ "$ARCH" = "i486" ]; then
  echo "Applying patches for $ARCH"
  #cat $CWD/foo.patch | patch -p0 --verbose
elif [ "$ARCH" = "s390" ]; then
  echo "Applying patches for $ARCH"
  #cat $CWD/foo.patch | patch -p0 --verbose
elif [ "$ARCH" = "powerpc" ]; then
  echo "Applying patches for $ARCH"
  #cat $CWD/foo.patch | patch -p0 --verbose
elif [ "$ARCH" = "x86_64" ]; then
  echo "Applying patches for $ARCH"
  #cat $CWD/foo.patch | patch -p0 --verbose
fi

CFLAGS="$SLKCFLAGS" \
./configure --prefix=/usr \
            --sysconfdir=/etc \
            --localstatedir=/var/lib \
	    --with-vfs \
	    --enable-usb \
	    --enable-network \
            $ARCH_CONFIGURE \
            $ARCH-slackware-linux || exit 
make || exit 
make install DESTDIR=$PKG

mkdir -p $PKG/usr/lib/pkgconfig
cp gnome-pilot-2.0.pc $PKG/usr/lib/pkgconfig

(
  mkdir -p $PKG/usr/share/applications
  cd $PKG/usr/share/applications
  ln -sf ../control-center-2.0/capplets/gpilotd-control-applet.desktop
)

chown -R root.bin $PKG/usr/bin

SCHEMAS=$PKG/etc/gconf/schemas
for i in $SCHEMAS/*.schemas
do
GCONF_CONFIG_SOURCE="xml::$PKG/etc/gconf/gconf.xml.defaults" \
        gconftool-2 --makefile-install-rule $i
done

(
  cd $PKG/etc/gconf/gconf.xml.defaults
  find ./ -type d -exec chmod go+rx {} \;
  find ./ -type f -exec chmod go+r {} \;
)

mkdir -p $PKG/usr/doc/gnome-pilot-$VERSION
cp -a AUTHORS COPYING ChangeLog INSTALL NEWS README TODO \
  $PKG/usr/doc/gnome-pilot-$VERSION
chmod 644 $PKG/usr/doc/gnome-pilot-$VERSION/*
chown root.root $PKG/usr/doc/gnome-pilot-$VERSION/*

find $PKG -type f | xargs file | grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded
gzip -9 $PKG/usr/man/*/*

mkdir -p $PKG/install
cat $CWD/slack-required > $PKG/install/slack-required
cat $CWD/slack-desc > $PKG/install/slack-desc

cd $PKG
makepkg -l y -c n $TMP/gnome-pilot-$VERSION-$ARCH-$BUILD.tgz

# Clean up the extra stuff:
if [ "$1" = "--cleanup" ]; then
  rm -rf $TMP/gnome-pilot-$VERSION
  rm -rf $PKG
fi
