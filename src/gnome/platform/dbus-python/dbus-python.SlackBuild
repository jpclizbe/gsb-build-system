#!/bin/sh

##
## Package Variables
##

PKGNAME=`basename $0 .SlackBuild`
CWD=`pwd`
TMP=${TMP:-/tmp}
PKG=$TMP/package-$PKGNAME
PKG_DEST=/home/packages
VERSION=${VERSION:-0.82.3}
ARCH=${ARCH:-i686}
BUILD=${BUILD:-1}
DISTRO=${DISTRO:-slackware}

## Installation Check
if [ -f /var/log/packages/${PKGNAME}-${VERSION}-${ARCH}-${BUILD} ]; then
  echo "${PKGNAME}-${VERSION}-${ARCH}-${BUILD} package already installed"
  exit 0
fi

##
## Temporary Space
##
if [ ! -d $TMP ]; then
  mkdir -p $TMP 
fi
rm -rf $PKG
mkdir -p $PKG

##
## Build Options
##

if [ "$ARCH" = "i386" ]; then
  GSB_CFLAGS="-O2 -march=i386 -mtune=i386"
  ARCH_CONFIGURE=""
elif [ "$ARCH" = "i486" ]; then
  GSB_CFLAGS="-O2 -march=i486 -mtune=i486"
  ARCH_CONFIGURE=""
elif [ "$ARCH" = "i686" ]; then
  GSB_CFLAGS="-O3 -march=i686 -mtune=i686 -pipe -fomit-frame-pointer -ffast-math"
  ARCH_CONFIGURE=""
elif [ "$ARCH" = "powerpc" ]; then
  GSB_CFLAGS="-O2"
  ARCH_CONFIGURE=""
elif [ "$ARCH" = "x86_64" ]; then
  GSB_CFLAGS="-O3 -fPIC -pipe -fomit-frame-pointer -ffast-math"
  ARCH_CONFIGURE="--libdir=/usr/lib64"
fi

## Decompress archive
cd $TMP 
tar xjf $CWD/${PKGNAME}-${VERSION}.tar.bz2
cd $PKGNAME-$VERSION

# Apply $ARCH specific patches
if [ "$ARCH" = "i386" ]; then
  echo "Applying patches for $ARCH"
  #cat $CWD/patches/foo.patch | patch -p0 --verbose
elif [ "$ARCH" = "i486" ]; then
  echo "Applying patches for $ARCH"
  #cat $CWD/patches/foo.patch | patch -p0 --verbose
elif [ "$ARCH" = "i686" ]; then
  echo "Applying patches for $ARCH"
  #cat $CWD/patches/foo.patch | patch -p0 --verbose
elif [ "$ARCH" = "s390" ]; then
  echo "Applying patches for $ARCH"
  #cat $CWD/patches/foo.patch | patch -p0 --verbose
elif [ "$ARCH" = "powerpc" ]; then
  echo "Applying patches for $ARCH"
  #cat $CWD/patches/foo.patch | patch -p0 --verbose
elif [ "$ARCH" = "x86_64" ]; then
  echo "Applying patches for $ARCH"
  #cat $CWD/patches/foo.patch | patch -p0 --verbose
fi

##
## Fix permissions for building
##
chown -R root.root .
find . -perm 664 -exec chmod 644 {} \;
find . -perm 600 -exec chmod 644 {} \;
find . -perm 444 -exec chmod 644 {} \;
find . -perm 400 -exec chmod 644 {} \;
find . -perm 440 -exec chmod 644 {} \;
find . -perm 777 -exec chmod 755 {} \;
find . -perm 775 -exec chmod 755 {} \;
find . -perm 511 -exec chmod 755 {} \;
find . -perm 711 -exec chmod 755 {} \;
find . -perm 555 -exec chmod 755 {} \;


##
## Run Configure and Build
##
## Add any local configuration options here.

CFLAGS="$GSB_CFLAGS" \
CXXFLAGS="$GSB_CFLAGS" \
./configure --prefix=/usr \
            $ARCH_CONFIGURE \
	    --sysconfdir=/etc \
            --localstatedir=/var/lib \
            --disable-static --enable-shared \
            --target=$ARCH-$DISTRO-linux || exit 1


make -j4 || exit 1
make install DESTDIR=$PKG

## Install Extra Documentation
mkdir -p $PKG/usr/doc/$PKGNAME-$VERSION
cp -a \
  AUTHORS COPYING ChangeLog MAINTAINERS NEWS README \
  $PKG/usr/doc/$PKGNAME-$VERSION
find $PKG/usr/doc/$PKGNAME-$VERSION/ -type f -exec chmod 644 {} \;

##
##  Permissions
##
chown -R $(stat --format "%u:%g" /usr/sbin) $PKG/usr/bin
chown -R root.root $PKG/usr/doc/$PKGNAME-$VERSION/*

##
## Strip Debugging Info
##
( cd $PKG
  find . | xargs file | grep "executable" | grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null
  find . | xargs file | grep "shared object" | grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null
)

##
## Compress and Link Manpages
##
if [ -d $PKG/usr/man ]; then
  ( cd $PKG/usr/man
    for manpagedir in $(find . -type d -name "man*") ; do
      ( cd $manpagedir
        for eachpage in $( find . -type l -maxdepth 1) ; do
          ln -s $( readlink $eachpage ).gz $eachpage.gz
          rm $eachpage
        done
        gzip -9 *.?
      )
    done
  )
fi

## 
## Check For Any Broken Links
## 
echo
find $PKG -type l | xargs file | grep broken;

##
## Slackware Package Information
##
mkdir -p $PKG/install
if [ -e $CWD/slack-required ]; then
        cat $CWD/slack-required > $PKG/install/slack-required
fi;

if [ -e $CWD/slack-desc ]; then
        cat $CWD/slack-desc > $PKG/install/slack-desc
fi;

if [ -e $CWD/doinst.sh ]; then
        cat $CWD/doinst.sh > $PKG/install/doinst.sh
fi;


##
## Make Slackware Package
##
cd $PKG
makepkg -l y -c n $PKG_DEST/$PKGNAME-$VERSION-$ARCH-$BUILD.tgz

##
## Cleanup If Wanted
##
if [ "$1" = "--cleanup" ]; then
  rm -rf $TMP/$PKGNAME-$VERSION
  rm -rf $PKG
fi
