#!/bin/sh

##
## Load Global Defaults
##
if [ -r ../../gsb.options ]; then
  . ../../gsb.options
fi
TMP=${TMP:-/tmp}

##
## Build Directory Structure
##
if [ ! -d $TMP ]; then
  mkdir -p $TMP;
fi

##
## GNOME Platform Files.  
##
## These are packages that are required and make the foundation
## for the GNOME Desktop packages.
##
## http://www.gnome.org/start/2.20/notes/en/index.html#rninstallation
## 

####
#### BUILD ORDER
####

BUILD_ORDER="
gnome-common
intltool
scrollkeeper
ORBit2
libbonobo
GConf
gnome-mime-data
pygobject
pyorbit
pycairo
pygtk
dbus-python
libdaemon
avahi
system-tools-backends
liboobs
gnome-vfs
libgnome
libgnomecanvas
libbonoboui
icon-naming-utils
gnome-icon-theme
gnome-keyring
libgnomeui
gtk-engines
"

## 
## TEST MODE
##
## I use the -test switch to prevent package installation,
## rather, only to run a test configure/build/package.
## Not to be used for proper package preparations.

usage() {
cat << EOF
Usage: `basename $0` [options]

Use this script to run a rolling compile of all the packages listed in BUILD_ORDER.

options:      -test (run a test of configure/compile/link/package, without
                     installing anything.)
              -help (this tiny help screen)

Current build order: `for i in $BUILD_ORDER; do echo -n $i" "; done;`

EOF
}

TESTMODE=no
while [ 0 ]; do
  if [ "$1" = "-test" ]; then
    TESTMODE=yes
    shift 1
  elif [ "$1" = "-help" ]; then
    usage;
    exit;
  else
    break
  fi
done


##
## Main Build Loop
##

(

for i in $BUILD_ORDER
do
(
  cd $i
  echo ""
  echo ""
  echo "*************************************************"
  echo "            Building $i"
  echo "*************************************************"
  echo ""
  if [ "$TESTMODE" == "no" ]; then
        ./$i.SlackBuild || exit 1
        upgradepkg --install-new $PKG_DEST/$i*.tgz
  else
        ./$i.SlackBuild -force || exit 1
  fi;
)
done


##
## Fork to Log
##

) 2>&1 | tee $TMP/gnome.platform.build.log
