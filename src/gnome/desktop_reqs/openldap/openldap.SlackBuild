#!/bin/sh

CWD=`pwd`
TMP=${TMP:-/tmp}
PKG=$TMP/package-openldap

VERSION=2.2.30
ARCH=${ARCH:-i486}
BUILD=2frg

if [ -f /var/log/packages/openldap-$VERSION-$ARCH-$BUILD ]; then
  echo "openldap-$VERSION-$ARCH-$BUILD package already installed"
  exit 0
fi

if [ ! -d $TMP ]; then
  mkdir -p $TMP # location to build the source
fi
rm -rf $PKG
mkdir -p $PKG

if [ "$ARCH" = "i386" ]; then
  SLKCFLAGS="-O2 -march=i386 -mcpu=i686"
  ARCH_CONFIGURE=""
elif [ "$ARCH" = "i486" ]; then
  SLKCFLAGS="-O2 -march=i486 -mcpu=i686"
  ARCH_CONFIGURE=""
elif [ "$ARCH" = "powerpc" ]; then
  SLKCFLAGS="-O2"
  ARCH_CONFIGURE=""
elif [ "$ARCH" = "s390" ]; then
  SLKCFLAGS="-O2"
  ARCH_CONFIGURE=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  ARCH_CONFIGURE="--libdir=/usr/lib64"
fi

cd $TMP 
tar xzvf $CWD/openldap-$VERSION.tgz
cd openldap-$VERSION

# Apply $ARCH specific patches
if [ "$ARCH" = "i386" ]; then
  echo "Applying patches for $ARCH"
  #cat $CWD/foo.patch | patch -p0 --verbose
elif [ "$ARCH" = "i486" ]; then
  echo "Applying patches for $ARCH"
  #cat $CWD/foo.patch | patch -p0 --verbose
elif [ "$ARCH" = "s390" ]; then
  echo "Applying patches for $ARCH"
  #cat $CWD/foo.patch | patch -p0 --verbose
elif [ "$ARCH" = "powerpc" ]; then
  echo "Applying patches for $ARCH"
  #cat $CWD/foo.patch | patch -p0 --verbose
elif [ "$ARCH" = "x86_64" ]; then
  echo "Applying patches for $ARCH"
  #cat $CWD/foo.patch | patch -p0 --verbose
fi

CFLAGS="$SLKCFLAGS" \
./configure --prefix=/usr \
	    --sysconfdir=/etc \
	    --localstatedir=/var/lib/openldap \
	    --enable-syslog \
	    --enable-dynamic \
	    --with-readline \
	    --with-tls \
	    --with-cyrus-sasl \
	    --with-kerberos \
	    --enable-slapd \
	    --enable-cleartext \
	    --enable-modules \
	    --enable-rlookups \
	    --enable-wrappers \
	    --enable-bdb \
	    --enable-slurpd \
	    --enable-modules \
	    --enable-passwd=mod \
       	--enable-phonetic=mod \
	    --enable-dnssrv=mod \
	    --enable-ldap \
	    --enable-meta=mod \
	    --enable-monitor=mod \
	    --enable-null=mod \
	    --enable-shell=mod \
	    --enable-local \
	    --enable-hdb=mod \
      $ARCH_CONFIGURE || exit 1
make depend || exit 1
make || exit 1
make install DESTDIR=$PKG

# Build kerberos stuff
(
  cd contrib/slapd-modules/passwd
  gcc -shared -I../../../include -Wall -g -DHAVE_KRB5 -o pw-kerberos.so kerberos.c
  cp -a pw-kerberos.so $PKG/usr/libexec/openldap/
)

# make some config files .new
( 
  cd $PKG/etc/openldap
  for i in ldap slapd
  do
  mv $i.conf $i.conf.new
  done

  cd schema
  for i in corba core cosine inetorgperson java misc nis openldap
  do
  mv $i.schema $i.schema.new
  done
)

mkdir -p $PKG/etc/rc.d
cat $CWD/rc.openldap > $PKG/etc/rc.d/rc.openldap.new

chown -R root.bin $PKG/usr/bin $PKG/usr/sbin

mkdir -p $PKG/usr/doc/openldap-$VERSION
cp -a AUTHORS COPYING ChangeLog INSTALL NEWS README \
  $PKG/usr/doc/openldap-$VERSION
chmod 644 $PKG/usr/doc/openldap-$VERSION/*
chown root.root $PKG/usr/doc/openldap-$VERSION/*

find $PKG -type f | xargs file | grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded
gzip -9 $PKG/usr/man/*/*

mkdir -p $PKG/install
cat $CWD/slack-conflicts > $PKG/install/slack-conflicts
cat $CWD/slack-required > $PKG/install/slack-required
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/doinst.sh > $PKG/install/doinst.sh

cd $PKG
makepkg -l y -c n $TMP/openldap-$VERSION-$ARCH-$BUILD.tgz

# Clean up the extra stuff:
if [ "$1" = "--cleanup" ]; then
  rm -rf $TMP/openldap-$VERSION
  rm -rf $PKG
fi
